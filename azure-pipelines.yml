trigger:
- master

jobs:
- job: Build
  pool:
    vmImage: macos-latest

  steps:
  - checkout: self
    submodules: true

  - task: ShellScript@2
    condition: eq(variables['publishSource'], 'true')
    displayName: Update references to published libraries
    inputs:
      scriptPath: scripts/updateLibReferences.sh
      args: $(Build.SourcesDirectory)

  - task: CopyFiles@2
    condition: eq(variables['publishSource'], 'true')
    displayName: Copy sources for demo application
    inputs:
      contents: |
       YubikitDemo/**
       fidodemo/**
       *gradle*
       !settings.gradle
       gradle/**
       keystore/**
       README.md
      targetFolder: $(Build.ArtifactStagingDirectory)/DemoApp

  - script: echo "include ':YubikitDemo', ':fidodemo'" > 'settings.gradle'
    condition: eq(variables['publishSource'], 'true')
    displayName: Modify gradle settings for standalone demo build
    workingDirectory: $(Build.ArtifactStagingDirectory)/DemoApp

  - task: ArchiveFiles@2
    condition: eq(variables['publishSource'], 'true')
    inputs:
      rootFolderOrFile: $(Build.ArtifactStagingDirectory)/DemoApp
      includeRootFolder: false
      archiveFile: '$(Build.ArtifactStagingDirectory)/YubikitDemo_$(Build.BuildNumber).zip'

  - task: DeleteFiles@1
    condition: eq(variables['publishSource'], 'true')
    displayName: Clean up temporary copy of demo source
    inputs:
      contents: |
       $(Build.ArtifactStagingDirectory)/DemoApp/**
       $(Build.ArtifactStagingDirectory)/DemoApp

  # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/gradle
  - task: Gradle@2
    displayName: Build YubiKit library and demo
    inputs:
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'assembleDebug assembleRelease testRelease'
      options: '--stacktrace'

  - task: CopyFiles@2
    displayName: Stage library artifacts
    inputs:
      contents: '**/*.aar'
      targetFolder: $(Build.ArtifactStagingDirectory)/lib
      flattenFolders: true

  - task: CopyFiles@2
    displayName: Stage demo app artifacts
    inputs:
      contents: '**/*.apk'
      targetFolder: $(Build.ArtifactStagingDirectory)/DemoApp/bin
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: Publish build artifacts
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: $(Build.DefinitionName)


# TODO: The following jobs should be moved to Release pipelines

# deploy library to maven only if publishAar variable passed as name of library to publish
- job: publishAar
  pool:
    vmImage: macos-latest
  condition: and(succeeded(), ne(variables['publishAar'], 'false'))
  variables:
    moduleName: $[variables['publishAar']]
  steps:
  - checkout: self
    submodules: true
  - task: ShellScript@2
    inputs:
      scriptPath: scripts/updateLibReferences.sh
      args: $(Build.SourcesDirectory)/$(moduleName)
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      tasks: ':$(moduleName):assembleRelease :$(moduleName):testRelease :$(moduleName):generatePomFileForAarPublication :$(moduleName):publish'
      options: '--stacktrace'

# deploy all libraries to maven only if publish variable passed as true
- job: publish
  pool:
    vmImage: macos-latest
  dependsOn: build
  condition: eq(variables['publish'], 'true')
  variables:
    moduleName: $[variables['publishAar']]
  steps:
    - checkout: self
      submodules: true
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        tasks: 'assembleRelease testRelease generatePomFileForAarPublication publish'
        options: '--stacktrace'

# deploy apk to App Center if publishApk passed as true
- job: publishApk
  dependsOn: build
  condition: and(succeeded(), eq(variables['publishApk'], 'true'))
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      artifactName: $(Build.DefinitionName)
      itemPattern: '**/?(*release.apk)' # Optional
      downloadPath: $(Build.SourcesDirectory)
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/app-center-distribute
  - task: AppCenterDistribute@3
    inputs:
      serverEndpoint: AppCenter
      appSlug: Yubico/YubikitDemo
      appFile: '**/?(*.apk)'
      releaseNotesOption: 'file' # Options: input, file
      releaseNotesFile: Changelog.md # Required when releaseNotesOption == File
