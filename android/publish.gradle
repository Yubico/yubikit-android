apply plugin: 'maven-publish'
apply plugin: 'signing'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
android {
    libraryVariants.configureEach { variant ->
        if (variant.name == 'release') {
            tasks.register('javadoc', Javadoc) {
                source = android.sourceSets.main.java.srcDirs
                classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
                owner.classpath += variant.javaCompileProvider.get().classpath
                exclude '**/R.html', '**/R.*.html', '**/index.html'
            }

            // build a jar with javadoc
            tasks.register('javadocJar', Jar) {
                dependsOn javadoc
                archiveClassifier.set('javadoc')
                from javadoc.destinationDir
            }

            // build a jar with source
            tasks.register('sourcesJar', Jar) {
                archiveClassifier.set('sources')
                from android.sourceSets.main.java.srcDirs
            }

            artifacts {
                archives javadocJar
                archives sourcesJar
            }
        }
    }
}


afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                from components.release
                artifact javadocJar
                artifact sourcesJar

                groupId = rootProject.group
                artifactId = project.name
                version = project.version

                apply from: rootProject.file('pom.gradle')
                pom(pomData)
            }
        }
        repositories {
            maven {
                name 'sonatype'
                url "https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/"
                credentials {
                    username = findProperty("sonatype.username")
                    password = findProperty("sonatype.password")
                }
            }
        }
    }
    tasks.withType(Sign).configureEach {
        onlyIf { isReleaseVersion && System.getenv("NO_GPG_SIGN") != "true" }
    }
    signing {
        useGpgCmd()
        sign publishing.publications.maven
    }
}
